nWithdrawls = sum(`Course Grade` == "Withdrawn"),
nBorHigher = sum(Performance %in% c("B+ or above", "B or above")),
nBplusOrHigher = sum(Performance == "B+ or above"),
nA = sum(`Course GPA (Normalized)` >= 3.7)) %>%
#group_by(`SAT Group`) %>%  # Uncomment to break down by SAT Group
group_by(`SA Status`) %>%
summarise(`Unique Scholars taking CS` = n(),
`Attempts` = sum(nCoursesTaken),
`Failed` = sum(nCoursesFailed),
`Withdrawls` = sum(nWithdrawls),
`Pass Rate` = percent((`Attempts` - `Failed` - `Withdrawls`) / Attempts),
`Earn B or Higher` = percent(sum(nBorHigher) / Attempts),
`Earn B+ or Higher` = percent(sum(nBplusOrHigher) / Attempts),
`Earn A- or Higher` = percent(sum(nA) / Attempts))) %>%
mutate(Proportion = percent(`Unique Scholars taking CS` / nTotal),
`Avg. # Courses per Scholar` = signif(`Attempts` / `Unique Scholars taking CS`, 2)) %>%
unite(`Scholars taking CS Freshman Year`, `Unique Scholars taking CS`, nTotal, sep = " / ") %>%
unite(`Scholars taking CS Freshman Year`, `Scholars taking CS Freshman Year`, Proportion, sep = " = ") %>%
select(`SA Status`, `Scholars taking CS Freshman Year`, `Avg. # Courses per Scholar`, `Pass Rate`, `Earn B or Higher`, `Earn B+ or Higher`, `Earn A- or Higher`) %>%
pander(split.cells = c(15,25,10,15,15,15),
caption = "\\label{table:cs-freshman-year}Performance of Scholars taking CS as a Freshman")
scholar_metadata %>%
filter(Cohort > 2015,
Cohort < 2019) %>%
mutate(`SA Status` = ifelse(`SA Computer Science`, "Took SA CS",
ifelse(`# SA Cohorts` > 0, "SA w/o CS", "No SA")),
`SA Status` = factor(`SA Status`, levels = c("No SA", "SA w/o CS", "Took SA CS")),
`Intended Major` = ifelse(grepl("Computer Science", `Intended Major`), "Intend to Major in CSC", "Other Major")) %>%
group_by(`SA Status`, `Intended Major`) %>%
summarise(nMajors = n()) %>%
transmute(`Intended Major`, prop = percent(nMajors/sum(nMajors))) %>%
spread(`Intended Major`, prop) %>%
pander(split.cells = c(20, 20, 20),
caption = "\\label{table:intended-cs-majors}Prevalence of Intended CS Major, by SA Status")
scholar_metadata %>%
filter(`# Years of College` >= 1,
Cohort > 2015,
Cohort < 2019) %>%
mutate(`SA Status` = ifelse(`SA Computer Science`, "Took SA CS",
ifelse(`# SA Cohorts` > 0, "SA w/o CS", "No SA")),
`SA Status` = factor(`SA Status`, levels = c("No SA", "SA w/o CS", "Took SA CS")),
`Current Major` = ifelse(grepl("Computer Science", `Current Major`), "Current Major in CSC", "Other Major")) %>%
group_by(`SA Status`, `Current Major`) %>%
summarise(nMajors = n()) %>%
transmute(`Current Major`, prop = percent(nMajors/sum(nMajors))) %>%
spread(`Current Major`, prop) %>%
pander(split.cells = c(20, 20, 20),
caption = "\\label{table:current-cs-majors}Prevalence of Current CS Major, by SA Status")
# Course attempts, by SA and SA CS status
scholar_metadata %>%
mutate(`SA Status` = ifelse(`SA Computer Science`, "Took SA CS",
ifelse(`# SA Cohorts` > 0, "SA w/o CS", "No SA")),
`SA Status` = factor(`SA Status`, levels = c("No SA", "SA w/o CS", "Took SA CS"))) %>%
#group_by(`SAT Group`) %>% # Uncomment to break down by SAT Group
group_by(`SA Status`) %>%
summarise(nTotal = n()) %>%
left_join(
cs_courses %>%
#group_by(`SAT Group`) %>% # Uncomment to break down by SAT Group
filter(`CS Course Level` %in% c("CS1", "CS2", "CS Elective")) %>%
group_by(`Scholar ID`, `SA Status`, `CS Course Level`) %>%
summarise(nCoursesTaken = n(),
nCoursesFailed = sum(`Course GPA (Normalized)` == 0 &
!(`Course Grade` == "Pass/Credit")),
nWithdrawls = sum(`Course Grade` == "Withdrawn"),
nSatisfactory = sum(Performance %in% c("B+ or above", "B or above"))) %>%
#group_by(`SAT Group`) %>%  # Uncomment to break down by SAT Group
group_by(`SA Status`, `CS Course Level`) %>%
summarise(`Unique Scholars taking CS` = n(),
`Attempts` = sum(nCoursesTaken),
`Failed` = sum(nCoursesFailed),
`Withdrawls` = sum(nWithdrawls),
`Pass` = `Attempts` - `Failed` - `Withdrawls`,
`Earn B+ or Higher` = sum(nSatisfactory))) %>%
mutate(Proportion = percent(`Unique Scholars taking CS` / nTotal),
`Avg. # Courses per Scholar` = signif(`Attempts` / `Unique Scholars taking CS`, 2)) %>%
unite(`Scholars taking CS Freshman Year`, `Unique Scholars taking CS`, nTotal, sep = " / ") %>%
unite(`Scholars taking CS Freshman Year`, `Scholars taking CS Freshman Year`, Proportion, sep = " = ") %>%
# Calculate 95% CI for Pass Rate
rowwise() %>%
mutate(tst = list(broom::tidy(prop.test(`Pass`, `Attempts`, conf.level=0.95)))) %>%
tidyr::unnest(tst) %>%
mutate(`Pass Rate` = percent(estimate, 0.1),
`95% CI` = paste("\\\n95% CI = [",
percent(conf.low, 0.1), ", ",
percent(conf.high, 0.1),"]\\\n",
sep = "")) %>%
unite("Pass Rate", `Pass Rate`, `95% CI`, sep = " ") %>%
# Drop unneeded fields from unnest
select(-estimate,-statistic,-p.value,-parameter,-conf.low,-conf.high,-method,-alternative) %>%
# Calculate 95% CI for Satisfactory Rate
rowwise() %>%
mutate(tst2 = list(broom::tidy(prop.test(`Earn B+ or Higher`, `Attempts`, conf.level=0.95)))) %>%
tidyr::unnest(tst2) %>%
mutate(`Earn B+ or Higher` = percent(estimate, 0.1),
`95% CI` = paste("\\\n95% CI = [",
percent(conf.low, 0.1), ", ",
percent(conf.high, 0.1),"]\\\n",
sep = "")) %>%
unite("Earn B+ or Higher", `Earn B+ or Higher`, `95% CI`, sep = " ") %>%
select(`CS Course Level`, `SA Status`, `Scholars taking CS Freshman Year`, `Pass Rate`, `Earn B+ or Higher`) %>%
arrange(`CS Course Level`) %>%
pander(split.cells = c(15,25,25,25,25),
caption = "\\label{table:cs-GPA-freshman}Performance of Scholars taking CS as a Freshman")
nonResScholars2019 = read_csv("SA Location.csv") %>%
filter(`SA Location` == "USC") %>%
select(`Scholar ID`)
nonResScholars = scholar_metadata %>%
filter((`Completed SA as Junior` == 1 & `SA Cohort` < 2018) |
(`Scholar ID` %in% nonResScholars2019$`Scholar ID`)) %>%
rename(`Institution` = `Scholar College`) %>%
filter(Cohort >= 2018) # Restrict to most recent cohorts
residentialScholars <- read_csv("SA Location.csv") %>%
filter(`SA Location` == "Amherst") %>%
left_join(scholar_metadata, by = c("Scholar ID")) %>%
rename(`Institution` = `Scholar College`) %>%
select(-`College Name`, -`SA Location`, -`Scholar Full Name`)
nonResTop10Institutions = nonResScholars %>%
group_by(`Institution`) %>%
summarise(`# Scholars Attending` = n()) %>%
arrange(desc(`# Scholars Attending`)) %>%
ungroup() %>%
group_by(`Institution` = factor(c(as.character(`Institution`)[1:6], rep("Other Institutions", n() - 6)),
levels = c(as.character(`Institution`)[1:6], "Other Institutions"))) %>%
summarise(ninst = n(), `# Scholars Attending` = sum(`# Scholars Attending`)) %>%
select(-ninst) %>%
mutate(`SA Model` = "Non-Residential")
resTop10Institutions = residentialScholars %>%
group_by(`Institution`) %>%
summarise(`# Scholars Attending` = n())  %>%
arrange(desc(`# Scholars Attending`)) %>%
ungroup() %>%
group_by(`Institution` = factor(c(as.character(`Institution`)[1:6], rep("Other Institutions", n() - 6)),
levels = c(as.character(`Institution`)[1:6], "Other Institutions"))) %>%
summarise(ninst = n(), `# Scholars Attending` = sum(`# Scholars Attending`)) %>%
select(-ninst) %>%
mutate(`SA Model` = "Residential")
rbind(nonResTop10Institutions, resTop10Institutions) %>%
select(`SA Model`, `Institution`, `# Scholars Attending`) %>%
pander(justify = c('center', 'left', 'center'),
split.cells = c(10, 60, 10),
caption = "\\label{table:recent-SA-top-colleges}Top Institutions by Enrollment for Scholars with non-Residential vs. Residentail SA as a Junior (2018-2019 Cohorts only)")
rbind(nonResScholars %>%
summarise(Group = "Non-Residential SA as a Junior",
`% attending Ivy-Plus School` = percent(sum(IvyPlus)/n()),
`% attending Top-50 School` = percent(sum(`College Forbes Ranking 2018` <= 50, na.rm = TRUE)/n()),
`% attending Top-100 School` = percent(sum(`College Forbes Ranking 2018` <= 100, na.rm = TRUE)/n()),
`% attending Lower-Ranked School` = percent(sum(`College Forbes Ranking 2018` > 100, na.rm = TRUE)/n()),
`% missing` = percent(sum(is.na(`College Forbes Ranking 2018`)) / n())),
residentialScholars %>%
summarise(Group = "Residential SA as a Junior",
`% attending Ivy-Plus School` = percent(sum(IvyPlus)/n()),
`% attending Top-50 School` = percent(sum(`College Forbes Ranking 2018` <= 50, na.rm = TRUE)/n()),
`% attending Top-100 School` = percent(sum(`College Forbes Ranking 2018` <= 100, na.rm = TRUE)/n()),
`% attending Lower-Ranked School` = percent(sum(`College Forbes Ranking 2018` > 100, na.rm = TRUE)/n()),
`% missing` = percent(sum(is.na(`College Forbes Ranking 2018`)) / n()))
)   %>%
pander(split.cells = c(40,10, 10, 10, 10,10),
caption = "\\label{table:recent-SA-college-rank}Scholars Attending Top Schools, Residential vs. non-Residential SA")
all_alums = scholar_metadata %>%
left_join(scholar_transcripts) %>%
filter(`Scholar Status` == "Scholar Alumni",
`SAT Percentile` > 10) %>% # Remove outlier
mutate(`# SA Cohorts` = factor(`# SA Cohorts`, labels = c("No SA", "1 Year", "2 Years")))
library(splines)
# Get min/max values of SAT percentile using the range() function
SATlims = all_alums %>%
select(`SAT Percentile`) %>%
range(na.rm = T)
# Generate a sequence of SAT Math values spanning the range
SAT_grid = seq(from = min(SATlims), to = max(SATlims))
GPA_by_SAT_spline = lm(`Reported Total GPA` ~ ns(`SAT Percentile`, df = 3), data = all_alums)
pred = predict(GPA_by_SAT_spline, newdata = list(`SAT Percentile` = SAT_grid), se = TRUE)
# Compute error bands (2*SE)
se_bands = with(pred, cbind("upper" = fit+2*se.fit,
"lower" = fit-2*se.fit))
# Plot the natural spline
ggplot() +
geom_point(data = all_alums,
aes(x = `SAT Percentile`, y = `Reported Total GPA`),
size = 1) +
geom_line(aes(x = SAT_grid, y = pred$fit), color = "#0000FF") +
geom_vline(aes(xintercept = 85), color = "darkgrey", linetype = "dashed") +
geom_text(aes(x = 85, y = 0.7),
angle = 90, vjust = -0.5, size = 4,
color = "darkgrey",
label = "85th percentile") +
ylab("Reported GPA") +
xlab("Fig. 7 Natural Spline of GPA by SAT Percentile") +
theme(axis.text.x = element_text(vjust = 0.5, hjust=0.5),
axis.title.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = 0, face = "plain", family="Times"))
all_alums %>%
ggplot(aes(x = `SAT Percentile`)) +
geom_density(alpha = 0.3, fill = "lightblue") +
geom_vline( aes(xintercept = 85),
linetype = "dashed") +
geom_text(aes(x = 85),
y = 0.01, angle=90, vjust = -0.5,
label = "85th percentile",
size = 2.5) +
xlab("SAT Percentile") +      # Label the x-axis
ylab("Density") +     # Label the y-axis`
scale_y_continuous(expand=c(0,0)) +
theme(axis.text.x = element_text(angle = 88, vjust = 0.5, hjust=1)) +
guides(fill = FALSE,
color = FALSE) +
ylab("Density") +
xlab("Fig. 8 Density of SAT Percentile") +
theme(axis.text.x = element_text(vjust = 0.5, hjust=0.5),
axis.title.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = 0, face = "plain", family="Times"))
SA_improvement = scholar_metadata %>%
filter(Cohort < 2018) %>%
mutate(`Attended SA?` = `# SA Cohorts` > 0) %>%
group_by(`Scholar College`, `Attended SA?`) %>%
summarise(n = n(),
avgGPA = mean(`Reported Total GPA`)) %>%
gather(variable, value, -(`Scholar College`:`Attended SA?`)) %>%
unite(temp, `Attended SA?`, variable) %>%
spread(temp, value) %>%
rename(`Avg. GPA (No SA)` = FALSE_avgGPA,
`Number Scholars (No SA)` = FALSE_n,
`Avg. GPA (Attended SA)` = TRUE_avgGPA,
`Number Scholars (Attended SA)` = TRUE_n) %>%
filter(`Number Scholars (No SA)` > 2 & `Number Scholars (Attended SA)` > 2) %>%
mutate(`SA Improved?` = ifelse(`Avg. GPA (Attended SA)` - `Avg. GPA (No SA)` >= 0.2, "Yes",
ifelse(`Avg. GPA (No SA)` - `Avg. GPA (Attended SA)` >= 0.2, "No", "")))
improved_schools = SA_improvement %>%
filter(`SA Improved?` == "Yes") %>%
select(`Scholar College`)
unimproved_schools = SA_improvement %>%
filter(`SA Improved?` == "No") %>%
select(`Scholar College`)
SA_improvement %>%
filter(`SA Improved?` == "Yes") %>%
rename(Institution = `Scholar College`) %>%
select(-`Number Scholars (Attended SA)`,-`Number Scholars (No SA)`, -`SA Improved?`) %>%
pander(caption = "\\label{table:groupA}Group A")
SA_improvement %>%
filter(`SA Improved?` == "No") %>%
rename(Institution = `Scholar College`) %>%
select(-`Number Scholars (Attended SA)`,-`Number Scholars (No SA)`, -`SA Improved?`) %>%
pander(caption = "\\label{table:groupB}Group B")
View(scholar_metadata)
?gather
# ISSUE: This is unweighted: there are 2 Scholars with a GPA > 4.0, can we assume everyone else is on a 4.0-scale?
GPA_at_admission_summary = scholar_metadata %>%
filter(Cohort >= 2016) %>%   # We didn't reliably track this until 2016,
group_by(Cohort, Gender) %>%
summarise(`Average HS Unweighted GPA` = round(mean(`HS Unweighted GPA`, na.rm = TRUE), 2),
sd = sd(`HS Unweighted GPA`, na.rm = TRUE),
n = n(),
`% missing` = percent(sum(is.na(`HS Unweighted GPA`)) / n)) %>%
# mutate(se = sd / sqrt(n),
#        lower.ci = `Average HS Unweighted GPA` - qt(1 - (0.05 / 2), n - 1) * se,
#        upper.ci = `Average HS Unweighted GPA` + qt(1 - (0.05 / 2), n - 1) * se,
#        `95% CI` = paste("[ ", signif(lower.ci, 3), ", ", signif(upper.ci, 3)," ]", sep = "")) %>%
select(Cohort,
`Average HS Unweighted GPA`,
#`95% CI`,
`% missing`)
GPA_at_admission_summary %>%
pander(caption = "\\label{table:HS-gpa}Average HS Unweighted GPA at Admission")
# ISSUE: This is unweighted: there are 2 Scholars with a GPA > 4.0, can we assume everyone else is on a 4.0-scale?
GPA_at_admission_summary = scholar_metadata %>%
filter(Cohort >= 2016) %>%   # We didn't reliably track this until 2016,
group_by(Cohort, Gender) %>%
summarise(`Average HS Unweighted GPA` = round(mean(`HS Unweighted GPA`, na.rm = TRUE), 2),
sd = sd(`HS Unweighted GPA`, na.rm = TRUE),
n = n(),
`% missing` = percent(sum(is.na(`HS Unweighted GPA`)) / n)) %>%
# mutate(se = sd / sqrt(n),
#        lower.ci = `Average HS Unweighted GPA` - qt(1 - (0.05 / 2), n - 1) * se,
#        upper.ci = `Average HS Unweighted GPA` + qt(1 - (0.05 / 2), n - 1) * se,
#        `95% CI` = paste("[ ", signif(lower.ci, 3), ", ", signif(upper.ci, 3)," ]", sep = "")) %>%
select(Cohort, Gender,
`Average HS Unweighted GPA`,
#`95% CI`,
`% missing`)
GPA_at_admission_summary %>%
pander(caption = "\\label{table:HS-gpa}Average HS Unweighted GPA at Admission")
# ISSUE: This is unweighted: there are 2 Scholars with a GPA > 4.0, can we assume everyone else is on a 4.0-scale?
GPA_at_admission_summary = scholar_metadata %>%
filter(Cohort >= 2016) %>%   # We didn't reliably track this until 2016,
group_by(Cohort, Gender) %>%
summarise(`Average HS Unweighted GPA` = round(mean(`HS Unweighted GPA`, na.rm = TRUE), 2),
sd = sd(`HS Unweighted GPA`, na.rm = TRUE),
n = n(),
`% missing` = percent(sum(is.na(`HS Unweighted GPA`)) / n)) %>%
# mutate(se = sd / sqrt(n),
#        lower.ci = `Average HS Unweighted GPA` - qt(1 - (0.05 / 2), n - 1) * se,
#        upper.ci = `Average HS Unweighted GPA` + qt(1 - (0.05 / 2), n - 1) * se,
#        `95% CI` = paste("[ ", signif(lower.ci, 3), ", ", signif(upper.ci, 3)," ]", sep = "")) %>%
select(Cohort, Gender,
`Average HS Unweighted GPA`,
#`95% CI`,
`% missing`) %>%
spread(Gender, `Average HS Unweighted GPA`)
GPA_at_admission_summary %>%
pander(caption = "\\label{table:HS-gpa}Average HS Unweighted GPA at Admission")
# ISSUE: This is unweighted: there are 2 Scholars with a GPA > 4.0, can we assume everyone else is on a 4.0-scale?
GPA_at_admission_summary = scholar_metadata %>%
filter(Cohort >= 2016) %>%   # We didn't reliably track this until 2016,
group_by(Cohort, Gender) %>%
summarise(`Average HS Unweighted GPA` = round(mean(`HS Unweighted GPA`, na.rm = TRUE), 2),
sd = sd(`HS Unweighted GPA`, na.rm = TRUE),
n = n(),
`% missing` = percent(sum(is.na(`HS Unweighted GPA`)) / n)) %>%
# mutate(se = sd / sqrt(n),
#        lower.ci = `Average HS Unweighted GPA` - qt(1 - (0.05 / 2), n - 1) * se,
#        upper.ci = `Average HS Unweighted GPA` + qt(1 - (0.05 / 2), n - 1) * se,
#        `95% CI` = paste("[ ", signif(lower.ci, 3), ", ", signif(upper.ci, 3)," ]", sep = "")) %>%
select(Cohort, Gender,
`Average HS Unweighted GPA`,
#`95% CI`,
`% missing`, n) %>%
spread(Gender, `Average HS Unweighted GPA`)
GPA_at_admission_summary %>%
pander(caption = "\\label{table:HS-gpa}Average HS Unweighted GPA at Admission")
# ISSUE: This is unweighted: there are 2 Scholars with a GPA > 4.0, can we assume everyone else is on a 4.0-scale?
GPA_at_admission_summary = scholar_metadata %>%
filter(Cohort >= 2016) %>%   # We didn't reliably track this until 2016,
group_by(Cohort, Gender) %>%
summarise(`Average HS Unweighted GPA` = round(mean(`HS Unweighted GPA`, na.rm = TRUE), 2),
sd = sd(`HS Unweighted GPA`, na.rm = TRUE),
n = n(),
`% missing` = percent(sum(is.na(`HS Unweighted GPA`)) / n)) %>%
# mutate(se = sd / sqrt(n),
#        lower.ci = `Average HS Unweighted GPA` - qt(1 - (0.05 / 2), n - 1) * se,
#        upper.ci = `Average HS Unweighted GPA` + qt(1 - (0.05 / 2), n - 1) * se,
#        `95% CI` = paste("[ ", signif(lower.ci, 3), ", ", signif(upper.ci, 3)," ]", sep = "")) %>%
select(Cohort, Gender,
`Average HS Unweighted GPA`,
#`95% CI`,
`% missing`, n)
GPA_at_admission_summary %>%
pander(caption = "\\label{table:HS-gpa}Average HS Unweighted GPA at Admission")
# ISSUE: This is unweighted: there are 2 Scholars with a GPA > 4.0, can we assume everyone else is on a 4.0-scale?
GPA_at_admission_summary = scholar_metadata %>%
filter(Cohort >= 2016) %>%   # We didn't reliably track this until 2016,
group_by(Cohort, Gender) %>%
summarise(`Average HS Unweighted GPA` = round(mean(`HS Unweighted GPA`, na.rm = TRUE), 2),
sd = sd(`HS Unweighted GPA`, na.rm = TRUE),
n = n(),
`% missing` = percent(sum(is.na(`HS Unweighted GPA`)) / n)) %>%
# mutate(se = sd / sqrt(n),
#        lower.ci = `Average HS Unweighted GPA` - qt(1 - (0.05 / 2), n - 1) * se,
#        upper.ci = `Average HS Unweighted GPA` + qt(1 - (0.05 / 2), n - 1) * se,
#        `95% CI` = paste("[ ", signif(lower.ci, 3), ", ", signif(upper.ci, 3)," ]", sep = "")) %>%
select(Cohort, Gender,
`Average HS Unweighted GPA`,
#`95% CI`,
`% missing`, n) %>%
mutate( Gender = paste0(Gender, n))
GPA_at_admission_summary %>%
pander(caption = "\\label{table:HS-gpa}Average HS Unweighted GPA at Admission")
# ISSUE: This is unweighted: there are 2 Scholars with a GPA > 4.0, can we assume everyone else is on a 4.0-scale?
GPA_at_admission_summary = scholar_metadata %>%
filter(Cohort >= 2016) %>%   # We didn't reliably track this until 2016,
group_by(Cohort, Gender) %>%
summarise(`Average HS Unweighted GPA` = round(mean(`HS Unweighted GPA`, na.rm = TRUE), 2),
sd = sd(`HS Unweighted GPA`, na.rm = TRUE),
n = n(),
`% missing` = percent(sum(is.na(`HS Unweighted GPA`)) / n)) %>%
# mutate(se = sd / sqrt(n),
#        lower.ci = `Average HS Unweighted GPA` - qt(1 - (0.05 / 2), n - 1) * se,
#        upper.ci = `Average HS Unweighted GPA` + qt(1 - (0.05 / 2), n - 1) * se,
#        `95% CI` = paste("[ ", signif(lower.ci, 3), ", ", signif(upper.ci, 3)," ]", sep = "")) %>%
select(Cohort, Gender,
`Average HS Unweighted GPA`,
#`95% CI`,
`% missing`, n) %>%
mutate( Gender = paste0(Gender, "(n = ", n,")"))
GPA_at_admission_summary %>%
pander(caption = "\\label{table:HS-gpa}Average HS Unweighted GPA at Admission")
# ISSUE: This is unweighted: there are 2 Scholars with a GPA > 4.0, can we assume everyone else is on a 4.0-scale?
GPA_at_admission_summary = scholar_metadata %>%
filter(Cohort >= 2016) %>%   # We didn't reliably track this until 2016,
group_by(Cohort, Gender) %>%
summarise(`Average HS Unweighted GPA` = round(mean(`HS Unweighted GPA`, na.rm = TRUE), 2),
sd = sd(`HS Unweighted GPA`, na.rm = TRUE),
n = n(),
`% missing` = percent(sum(is.na(`HS Unweighted GPA`)) / n)) %>%
# mutate(se = sd / sqrt(n),
#        lower.ci = `Average HS Unweighted GPA` - qt(1 - (0.05 / 2), n - 1) * se,
#        upper.ci = `Average HS Unweighted GPA` + qt(1 - (0.05 / 2), n - 1) * se,
#        `95% CI` = paste("[ ", signif(lower.ci, 3), ", ", signif(upper.ci, 3)," ]", sep = "")) %>%
select(Cohort, Gender,
`Average HS Unweighted GPA`,
#`95% CI`,
`% missing`, n) %>%
mutate( Gender = paste0(Gender, " (n = ", n,")"))
GPA_at_admission_summary %>%
pander(caption = "\\label{table:HS-gpa}Average HS Unweighted GPA at Admission")
# ISSUE: This is unweighted: there are 2 Scholars with a GPA > 4.0, can we assume everyone else is on a 4.0-scale?
GPA_at_admission_summary = scholar_metadata %>%
filter(Cohort >= 2016) %>%   # We didn't reliably track this until 2016,
group_by(Cohort, Gender) %>%
summarise(`Average HS Unweighted GPA` = round(mean(`HS Unweighted GPA`, na.rm = TRUE), 2),
sd = sd(`HS Unweighted GPA`, na.rm = TRUE),
n = n(),
`% missing` = percent(sum(is.na(`HS Unweighted GPA`)) / n)) %>%
# mutate(se = sd / sqrt(n),
#        lower.ci = `Average HS Unweighted GPA` - qt(1 - (0.05 / 2), n - 1) * se,
#        upper.ci = `Average HS Unweighted GPA` + qt(1 - (0.05 / 2), n - 1) * se,
#        `95% CI` = paste("[ ", signif(lower.ci, 3), ", ", signif(upper.ci, 3)," ]", sep = "")) %>%
select(Cohort, Gender,
`Average HS Unweighted GPA`,
#`95% CI`,
`% missing`, n) %>%
mutate( Gender = paste0(Gender, " (n = ", n,")")) %>%
select(-n) %>%
spread(Gender, `Average HS Unweighted GPA`)
GPA_at_admission_summary %>%
pander(caption = "\\label{table:HS-gpa}Average HS Unweighted GPA at Admission")
# ISSUE: This is unweighted: there are 2 Scholars with a GPA > 4.0, can we assume everyone else is on a 4.0-scale?
GPA_at_admission_summary = scholar_metadata %>%
filter(Cohort >= 2016) %>%   # We didn't reliably track this until 2016,
group_by(Cohort, Gender) %>%
summarise(`Average HS Unweighted GPA` = round(mean(`HS Unweighted GPA`, na.rm = TRUE), 2),
sd = sd(`HS Unweighted GPA`, na.rm = TRUE),
n = n(),
`% missing` = percent(sum(is.na(`HS Unweighted GPA`)) / n)) %>%
# mutate(se = sd / sqrt(n),
#        lower.ci = `Average HS Unweighted GPA` - qt(1 - (0.05 / 2), n - 1) * se,
#        upper.ci = `Average HS Unweighted GPA` + qt(1 - (0.05 / 2), n - 1) * se,
#        `95% CI` = paste("[ ", signif(lower.ci, 3), ", ", signif(upper.ci, 3)," ]", sep = "")) %>%
select(Cohort, Gender,
`Average HS Unweighted GPA`,
#`95% CI`,
`% missing`, n) %>%
mutate( `Average HS Unweighted GPA` = paste0(`Average HS Unweighted GPA`, " (n = ", n,")")) %>%
select(-n) %>%
spread(Gender, `Average HS Unweighted GPA`)
GPA_at_admission_summary %>%
pander(caption = "\\label{table:HS-gpa}Average HS Unweighted GPA at Admission")
# ISSUE: This is unweighted: there are 2 Scholars with a GPA > 4.0, can we assume everyone else is on a 4.0-scale?
GPA_at_admission_summary = scholar_metadata %>%
filter(Cohort >= 2016) %>%   # We didn't reliably track this until 2016,
group_by(Cohort, Gender) %>%
summarise(`Average HS Unweighted GPA` = round(mean(`HS Unweighted GPA`, na.rm = TRUE), 2),
sd = sd(`HS Unweighted GPA`, na.rm = TRUE),
n = n(),
`% missing` = percent(sum(is.na(`HS Unweighted GPA`)) / n)) %>%
# mutate(se = sd / sqrt(n),
#        lower.ci = `Average HS Unweighted GPA` - qt(1 - (0.05 / 2), n - 1) * se,
#        upper.ci = `Average HS Unweighted GPA` + qt(1 - (0.05 / 2), n - 1) * se,
#        `95% CI` = paste("[ ", signif(lower.ci, 3), ", ", signif(upper.ci, 3)," ]", sep = "")) %>%
select(Cohort, Gender,
`Average HS Unweighted GPA`,
#`95% CI`,
`% missing`, n) %>%
mutate( `Average HS Unweighted GPA` = paste0(`Average HS Unweighted GPA`, " (n = ", n,", % missing = ", `% missing`,")")) %>%
select(-n, -`% missing`) %>%
spread(Gender, `Average HS Unweighted GPA`)
GPA_at_admission_summary %>%
pander(caption = "\\label{table:HS-gpa}Average HS Unweighted GPA at Admission")
# ISSUE: This is unweighted: there are 2 Scholars with a GPA > 4.0, can we assume everyone else is on a 4.0-scale?
GPA_at_admission_summary = scholar_metadata %>%
filter(Cohort >= 2016) %>%   # We didn't reliably track this until 2016,
group_by(Cohort, Gender) %>%
summarise(`Average HS Unweighted GPA` = round(mean(`HS Unweighted GPA`, na.rm = TRUE), 2),
sd = sd(`HS Unweighted GPA`, na.rm = TRUE),
n = n(),
`% missing` = percent(sum(is.na(`HS Unweighted GPA`)) / n)) %>%
# mutate(se = sd / sqrt(n),
#        lower.ci = `Average HS Unweighted GPA` - qt(1 - (0.05 / 2), n - 1) * se,
#        upper.ci = `Average HS Unweighted GPA` + qt(1 - (0.05 / 2), n - 1) * se,
#        `95% CI` = paste("[ ", signif(lower.ci, 3), ", ", signif(upper.ci, 3)," ]", sep = "")) %>%
select(Cohort, Gender,
`Average HS Unweighted GPA`,
`95% CI`, n) %>%
mutate( `Average HS Unweighted GPA` = paste0(`Average HS Unweighted GPA`, " (n = ", n,", % missing = ", `% missing`,")")) %>%
select(-n) %>%
spread(Gender, `Average HS Unweighted GPA`)
# ISSUE: This is unweighted: there are 2 Scholars with a GPA > 4.0, can we assume everyone else is on a 4.0-scale?
GPA_at_admission_summary = scholar_metadata %>%
filter(Cohort >= 2016) %>%   # We didn't reliably track this until 2016,
group_by(Cohort, Gender) %>%
summarise(`Average HS Unweighted GPA` = round(mean(`HS Unweighted GPA`, na.rm = TRUE), 2),
sd = sd(`HS Unweighted GPA`, na.rm = TRUE),
n = n(),
`% missing` = percent(sum(is.na(`HS Unweighted GPA`)) / n)) %>%
# mutate(se = sd / sqrt(n),
#        lower.ci = `Average HS Unweighted GPA` - qt(1 - (0.05 / 2), n - 1) * se,
#        upper.ci = `Average HS Unweighted GPA` + qt(1 - (0.05 / 2), n - 1) * se,
#        `95% CI` = paste("[ ", signif(lower.ci, 3), ", ", signif(upper.ci, 3)," ]", sep = "")) %>%
select(Cohort, Gender,
`Average HS Unweighted GPA`,
n) %>%
mutate( `Average HS Unweighted GPA` = paste0(`Average HS Unweighted GPA`, " (n = ", n,", % missing = ", `% missing`,")")) %>%
select(-n) %>%
spread(Gender, `Average HS Unweighted GPA`)
# ISSUE: This is unweighted: there are 2 Scholars with a GPA > 4.0, can we assume everyone else is on a 4.0-scale?
GPA_at_admission_summary = scholar_metadata %>%
filter(Cohort >= 2016) %>%   # We didn't reliably track this until 2016,
group_by(Cohort, Gender) %>%
summarise(`Average HS Unweighted GPA` = round(mean(`HS Unweighted GPA`, na.rm = TRUE), 2),
sd = sd(`HS Unweighted GPA`, na.rm = TRUE),
n = n(),
`% missing` = percent(sum(is.na(`HS Unweighted GPA`)) / n)) %>%
# mutate(se = sd / sqrt(n),
#        lower.ci = `Average HS Unweighted GPA` - qt(1 - (0.05 / 2), n - 1) * se,
#        upper.ci = `Average HS Unweighted GPA` + qt(1 - (0.05 / 2), n - 1) * se,
#        `95% CI` = paste("[ ", signif(lower.ci, 3), ", ", signif(upper.ci, 3)," ]", sep = "")) %>%
select(Cohort, Gender,
`Average HS Unweighted GPA`,
n) %>%
mutate( `Average HS Unweighted GPA` = paste0(`Average HS Unweighted GPA`, " (n = ", n,")")) %>%
select(-n) %>%
spread(Gender, `Average HS Unweighted GPA`)
GPA_at_admission_summary %>%
pander(caption = "\\label{table:HS-gpa}Average HS Unweighted GPA at Admission")
