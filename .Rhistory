currentLocation = location,
hungerStatus = `foodNeed:status`,
sleepStatus = `sleepNeed:status`,
emotionalStatus = `loveNeed:status`,
apartmentId = `shelterNeed:currentShelter`,
availableBalance = `financialSafetyNeed:availableBalance`,
dailyFoodBudget = `financialSafetyNeed:dailyFoodBudget`,
weeklyExtraBudget = `financialSafetyNeed:weeklyExtraBudget`,
financialStatus = `financialSafetyNeed:status`,
jobId = `financialSafetyNeed:job:id`)
View(AgentStateTable)
AgentStateTable <- read_delim("Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Activity Logs/ParticipantStatusLogs56.tsv",
"\t", escape_double = FALSE, col_types = cols(
X33 = col_skip(),
`step` = col_skip(),
`age` = col_skip(),
`currentUnit` = col_skip(),
`family:classroom` = col_skip(),
`foodNeed:fullness` = col_skip(),
`foodNeed:numberOfMealsTaken` = col_skip(),
`lifeStatus` = col_skip(),
`loveNeed:meetingId` = col_skip(),
`loveNeed:socialHappiness` = col_skip(),
`loveNeed:socialStatus` = col_skip(),
`loveNeed:status` = col_skip(),
`neighborhoodId` = col_skip(),
`todaysPlan:beenAtWork` = col_skip(),
`todaysPlan:cameBackFromWork` = col_skip(),
`todaysPlan:day` = col_skip(),
`todaysPlan:leaveTimeForWork` = col_skip(),
`todaysPlan:leaveTimeFromWork` = col_skip(),
`todaysPlan:wakeUpTime` = col_skip(),
`todaysPlan:workDay` = col_skip(),
`visitReason` = col_skip()), na = "null",
trim_ws = TRUE)
AgentStateTable <- AgentStateTable %>%
rename(timestamp = simulationTime,
#participantId = agentId,
currentLocation = location,
hungerStatus = `foodNeed:status`,
sleepStatus = `sleepNeed:status`,
emotionalStatus = `loveNeed:status`,
apartmentId = `shelterNeed:currentShelter`,
availableBalance = `financialSafetyNeed:availableBalance`,
dailyFoodBudget = `financialSafetyNeed:dailyFoodBudget`,
weeklyExtraBudget = `financialSafetyNeed:weeklyExtraBudget`,
financialStatus = `financialSafetyNeed:status`,
jobId = `financialSafetyNeed:job:id`)
AgentStateTable <- AgentStateTable %>%
rename(timestamp = simulationTime,
#participantId = agentId,
currentLocation = location,
hungerStatus = `foodNeed:status`,
sleepStatus = `sleepNeed:status`,
#emotionalStatus = `loveNeed:status`,
apartmentId = `shelterNeed:currentShelter`,
availableBalance = `financialSafetyNeed:availableBalance`,
dailyFoodBudget = `financialSafetyNeed:dailyFoodBudget`,
weeklyExtraBudget = `financialSafetyNeed:weeklyExtraBudget`,
financialStatus = `financialSafetyNeed:status`,
jobId = `financialSafetyNeed:job:id`)
AgentStateTable %>%
write_csv("Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Activity Logs/ParticipantStatusLogs56.csv")
for(i in 1:72) {
read_csv(paste0("Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Activity Logs/ParticipantStatusLogs", i, "- old.csv")) %>%
select(-lifeStatus) %>%
rename(participantId = agentId) %>%
write_csv(paste0("Desktop/Activity Logs 2/ParticipantStatusLogs", i, ".csv"))
}
for(i in 1:72) {
read_csv(paste0("Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Activity Logs/ParticipantStatusLogs", i, "- old.csv")) %>%
select(-lifeStatus) %>%
rename(participantId = agentId) %>%
write_csv(paste0("Desktop/Activity Logs 2/ParticipantStatusLogs", i, ".csv"))
}
for(i in 57:72) {
read_csv(paste0("Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Activity Logs/ParticipantStatusLogs", i, "- old.csv")) %>%
select(-lifeStatus) %>%
rename(participantId = agentId) %>%
write_csv(paste0("Desktop/Activity Logs 2/ParticipantStatusLogs", i, ".csv"))
}
AgentStateTable <- read_csv("Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Activity Logs/ParticipantStatusLogs56.csv")
AgentStateTable <- read_csv("Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Activity Logs/ParticipantStatusLogs56- old.csv")
View(AgentStateTable)
for(i in 56:56) {
read_csv(paste0("Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Activity Logs/ParticipantStatusLogs", i, "- old.csv")) %>%
#select(-lifeStatus) %>%
rename(participantId = agentId) %>%
write_csv(paste0("Desktop/Activity Logs 2/ParticipantStatusLogs", i, ".csv"))
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(SmartEDA)
library(GGally)
library(igraph)
Participants <- read_csv("~/Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Attributes/Participants.csv")
Participants$educationLevel <- factor(Participants$educationLevel, levels = c("Low", "HighSchoolOrCollege", "Bachelors", "Graduate"))
Apartments <- read_csv("~/Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Attributes/Apartments.csv")
Buildings <- read_csv("~/Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Attributes/Buildings.csv")
Employers <- read_csv("~/Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Attributes/Employers.csv")
Jobs <- read_csv("~/Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Attributes/Jobs.csv")
Pubs <- read_csv("~/Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Attributes/Pubs.csv")
Restaurants <- read_csv("~/Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Attributes/Restaurants.csv")
Schools <- read_csv("~/Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Attributes/Schools.csv")
CheckinJournal <- read_csv("~/Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Journals/CheckinJournal.csv")
FinancialJournal <- read_csv("~/Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Journals/FinancialJournal.csv")
TravelJournal <- read_csv("~/Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Journals/TravelJournal.csv")
SocialNetwork <- read_csv("~/Google Drive/Synergistic Activities/Workshops/VAST Challenge 2022/VAST-Challenge-2022/Datasets/Journals/SocialNetwork.csv")
# Some distributions
Participants %>% ExpNumViz(target=NULL)
Participants %>% ExpCTable(margin=1,clim=10,nlim=3,round=2,bin=NULL,per=T)
Participants %>% ggplot(aes(x = educationLevel, y = age)) +
geom_boxplot() +
geom_jitter(width = 0.1)
Participants %>% ggplot(aes(x = factor(educationLevel),
y = prop.table(stat(count)),
fill = factor(haveKids),
label = scales::percent(prop.table(stat(count))))) +
geom_bar(position = "stack") +
geom_text(stat = 'count',
position = position_dodge(.9),
vjust = -0.5,
size = 3) +
scale_y_continuous(labels = scales::percent) +
labs(x = 'Education Level', y = 'Percentage of Participants', fill = 'educationLevel') +
theme(legend.position="none")
Participants %>% ggplot(aes(fill = haveKids, x = householdSize)) +
geom_bar()
CheckinJournal %>%
group_by(participantId) %>%
summarise(nCheckins = n()) %>%
summary()
moved_apartments <- CheckinJournal %>%
group_by(participantId, venueId, venueType) %>%
filter(venueType == "Apartment") %>%
summarise(nCheckins = n()) %>%
ungroup() %>%
group_by(participantId) %>%
summarise(nApartments = n()) %>%
filter(nApartments > 1) %>%
select(participantId)
CheckinJournal %>%
filter(venueType == "Apartment",
participantId %in% moved_apartments$participantId) %>%
arrange(participantId)
CheckinJournal %>%
group_by(participantId, venueId, venueType) %>%
filter(venueType == "Workplace") %>%
summarise(nCheckins = n()) %>%
ungroup() %>%
group_by(participantId) %>%
summarise(nJobs = n()) %>%
filter(nJobs > 1)
TravelJournal %>%
group_by(participantId) %>%
summarise(minBalance = min(endingBalance),
maxBalance = max(endingBalance),
medianBalance = median(endingBalance)) %>%
ggplot(aes(x = maxBalance)) +
geom_histogram(binwidth = 5000)
TravelJournal %>%
group_by(participantId) %>%
mutate(diff = endingBalance-startingBalance) %>%
arrange(desc(diff))
TravelJournal %>%
ggplot(aes(x = checkOutTime, y = endingBalance, group = participantId)) +
theme_bw() +
theme(panel.grid=element_blank()) +
scale_y_continuous(labels=scales::dollar_format())+
geom_line(size=0.2, alpha=0.1) +
xlab("") + ylab("Account Balance")
weighted_interactions <- SocialNetwork %>%
group_by(participantIdFrom, participantIdTo) %>%
summarise(n = n())
network <- graph.data.frame(weighted_interactions, directed = T)
V(network)$label <- V(network)$name
V(network)$degree <- degree(network)
E(network)$weights <- weighted_interactions$n
View(Schools)
View(Restaurants)
View(Pubs)
TravelJournal %>%
filter(purpose %in% c("Eating", "Recreation (Social Gathering)")) %>%
mutate(totalSpent = endingBalance - startingBalance) %>%
group_by(travelEndLocationId) %>%
summarise(totalRevenue = sum(totalSpent))
TravelJournal %>%
filter(purpose %in% c("Eating", "Recreation (Social Gathering)")) %>%
mutate(totalSpent = startingBalance - endingBalance) %>%
group_by(travelEndLocationId) %>%
summarise(totalRevenue = sum(totalSpent))
View(Restaurants)
TravelJournal %>%
filter(purpose %in% c("Eating", "Recreation (Social Gathering)")) %>%
mutate(totalSpent = startingBalance - endingBalance) %>%
group_by(travelEndLocationId) %>%
summarise(totalRevenue = sum(totalSpent)) %>%
full_join(Restaurants, by = c("travelEndLocationId" = "restaurantId"))
TravelJournal %>%
filter(purpose %in% c("Eating", "Recreation (Social Gathering)")) %>%
mutate(totalSpent = startingBalance - endingBalance) %>%
group_by(travelEndLocationId) %>%
summarise(totalRevenue = sum(totalSpent)) %>%
full_join(Restaurants, by = c("travelEndLocationId" = "restaurantId")) %>%
full_join(Pubs, by = c("travelEndLocationId" = "pubId"))
TravelJournal %>%
filter(purpose %in% c("Eating", "Recreation (Social Gathering)")) %>%
mutate(totalSpent = startingBalance - endingBalance) %>%
group_by(travelEndLocationId) %>%
summarise(totalRevenue = sum(totalSpent)) %>%
right_join(Restaurants, by = c("travelEndLocationId" = "restaurantId"))
RestaurantRevenue <- TravelJournal %>%
filter(purpose %in% c("Eating", "Recreation (Social Gathering)")) %>%
mutate(totalSpent = startingBalance - endingBalance) %>%
group_by(travelEndLocationId) %>%
summarise(totalRevenue = sum(totalSpent)) %>%
right_join(Restaurants, by = c("travelEndLocationId" = "restaurantId"))
RestaurantRevenue %>% ggplot(aes(x = foodCost, y = totalRevenue)) +
geom_point()
RestaurantRevenue %>% ggplot(aes(x = maxoccupancy, y = totalRevenue)) +
geom_point()
RestaurantRevenue <- TravelJournal %>%
filter(purpose %in% c("Eating", "Recreation (Social Gathering)")) %>%
mutate(totalSpent = startingBalance - endingBalance) %>%
group_by(travelEndLocationId) %>%
summarise(totalRevenue = sum(totalSpent)) %>%
right_join(Restaurants, by = c("travelEndLocationId" = "restaurantId"))
RestaurantRevenue %>% ggplot(aes(x = maxoccupancy, y = totalRevenue)) +
geom_point()
RestaurantRevenue %>% ggplot(aes(x = maxOccupancy, y = totalRevenue)) +
geom_point()
lm(totalRevenue ~ maxOccupancy + foodCost, data = RestaurantRevenue)
summary(lm(totalRevenue ~ maxOccupancy + foodCost, data = RestaurantRevenue))
summary(lm(totalRevenue ~ ., data = RestaurantRevenue))
summary(lm(totalRevenue ~ -location, data = RestaurantRevenue))
maxOccupancy + foodCost
RestaurantRevenue <- TravelJournal %>%
filter(purpose %in% c("Eating", "Recreation (Social Gathering)")) %>%
mutate(totalSpent = startingBalance - endingBalance) %>%
group_by(travelEndLocationId) %>%
summarise(totalRevenue = sum(totalSpent)) %>%
right_join(Restaurants, by = c("travelEndLocationId" = "restaurantId"))
summary(lm(totalRevenue ~ maxOccupancy + foodCost, data = RestaurantRevenue))
View(RestaurantRevenue)
View(Pubs)
View(Participants)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(tree)
library(dplyr)
library(rpart.plot)
trust_2023_raw_data <- read_csv("trust-2023-raw-data.csv")
library(tidyverse)
library(ggplot2)
library(tree)
library(dplyr)
library(rpart.plot)
trust_2023_raw_data <- read_csv("trust-2023-raw-data.csv") %>% head()
library(tidyverse)
library(ggplot2)
library(tree)
library(dplyr)
library(rpart.plot)
trust_2023_raw_data <- read_csv("trust-2023-raw-data.csv")
believe_real_data <- trust_2023_raw_data %>%
filter(name == "I believe the visualization shows real data.") %>%
select(-c(name, session_id, subfolder, category, question_type, cluster, image, title)) %>% head(20)
believe_prelim_tree <- rpart(response ~. , data = believe_real_data, method="class")
rpart.plot(prelim_tree, type = 4, clip.right.labs = FALSE, extra=102)
rpart.plot(believe_prelim_tree, type = 4, clip.right.labs = FALSE, extra=102)
believe_real_data <- trust_2023_raw_data %>%
filter(name == "I believe the visualization shows real data.") %>%
select(-c(name, session_id, subfolder, category, question_type, cluster, image, title)) %>% head(100)
believe_prelim_tree <- rpart(response ~. , data = believe_real_data, method="class")
rpart.plot(believe_prelim_tree, type = 4, clip.right.labs = FALSE, extra=102)
believe_real_data <- trust_2023_raw_data %>%
filter(name == "I believe the visualization shows real data.") %>%
select(-c(name, session_id, subfolder, category, question_type, cluster, image, title, likertscale)) %>% head(100)
believe_prelim_tree <- rpart(response ~. , data = believe_real_data, method="class")
rpart.plot(believe_prelim_tree, type = 4, clip.right.labs = FALSE, extra=102)
believe_real_data <- trust_2023_raw_data %>%
filter(name == "I believe the visualization shows real data.") %>%
select(-c(name, session_id, subfolder, category, question_type, cluster, image, image_new, title, likertscale)) %>% head(100)
believe_prelim_tree <- rpart(response ~. , data = believe_real_data, method="class")
believe_prelim_tree <- rpart(response ~. , data = believe_real_data, method="class")
rpart.plot(believe_prelim_tree, type = 4, clip.right.labs = FALSE, extra=102)
believe_real_data <- trust_2023_raw_data %>%
filter(name == "I believe the visualization shows real data.") %>%
select(-c(name, session_id, subfolder, category, question_type, cluster, image, image_new, title, likertscale)) %>% head(200)
believe_prelim_tree <- rpart(response ~. , data = believe_real_data, method="class")
rpart.plot(believe_prelim_tree, type = 4, clip.right.labs = FALSE, extra=102)
believe_real_data <- trust_2023_raw_data %>%
filter(name == "I believe the visualization shows real data.") %>%
select(-c(name, session_id, subfolder, question_type, cluster, image, image_new, title, likertscale)) %>% head(200)
believe_prelim_tree <- rpart(response ~. , data = believe_real_data, method="class")
rpart.plot(believe_prelim_tree, type = 4, clip.right.labs = FALSE, extra=102)
believe_prelim_tree <- rpart(response ~. , data = believe_real_data, method="class")
rpart.plot(believe_prelim_tree, type = 4, clip.right.labs = FALSE, extra=102)
believe_real_data <- trust_2023_raw_data %>%
filter(name == "I believe the visualization shows real data.") %>%
select(-c(...1, name, session_id, subfolder, question_type, cluster, image, image_new, title, likertscale)) %>% head(200)
believe_prelim_tree <- rpart(response ~. , data = believe_real_data, method="class")
rpart.plot(believe_prelim_tree, type = 4, clip.right.labs = FALSE, extra=102)
believe_real_data <- trust_2023_raw_data %>%
filter(name == "I believe the visualization shows real data.") %>%
select(-c(...1, name, session_id, category, question_type, cluster, image, image_new, title, likertscale)) %>% head(200)
believe_prelim_tree <- rpart(response ~. , data = believe_real_data, method="class")
rpart.plot(believe_prelim_tree, type = 4, clip.right.labs = FALSE, extra=102)
believe_real_data <- trust_2023_raw_data %>%
filter(name == "I believe the visualization shows real data.") %>%
select(-c(...1, name, session_id, category, question_type, cluster, image, image_new, title, likertscale))
rpart.plot(believe_prelim_tree, type = 4, clip.right.labs = FALSE, extra=102)
believe_prelim_tree <- rpart(response ~. , data = believe_real_data, method="class")
rpart.plot(believe_prelim_tree, type = 4, clip.right.labs = FALSE, extra=102)
rpart.plot(believe_prelim_tree)
believe_prelim_tree <- rpart(response ~. , data = believe_real_data, method="class")
View(believe_prelim_tree)
rpart.plot(believe_prelim_tree, type = 4, clip.right.labs = FALSE, extra=102)
believe_prelim_tree
believe_real_data <- trust_2023_raw_data %>%
filter(name == "I believe the visualization shows real data.") %>%
select(-c(...1, name, session_id, category, question_type, cluster, image, image_new, title, likertscale))
library(tidyverse)
library(ggplot2)
library(tree)
library(dplyr)
library(rpart.plot)
trust_2023_raw_data <- read_csv("trust-2023-raw-data.csv")
believe_real_data <- trust_2023_raw_data %>%
filter(name == "I believe the visualization shows real data.") %>%
select(-c(...1, name, session_id, category, question_type, cluster, image, image_new, title, likertscale))
library(tidyverse)
library(ggplot2)
library(tree)
library(dplyr)
library(rpart.plot)
trust_2023_raw_data <- read_csv("trust-2023-raw-data.csv")
believe_real_data <- trust_2023_raw_data %>%
filter(name == "I believe the visualization shows real data.") %>%
select(-c(...1, name, session_id, category, question_type, cluster, image, image_new, title, likertscale))
View(believe_real_data)
believe_real_data <- trust_2023_raw_data %>%
filter(name == "I believe the visualization shows real data.") %>%
select(-c(...1, name, session_id, category, question_type, cluster, image, image_new, title, likertscale, starts_with("mem")))
believe_prelim_tree <- rpart(response ~. , data = believe_real_data, method="class")
believe_prelim_tree
believe_prelim_tree <- rpart(response ~. , data = believe_real_data, method="class", minsplit = 8)
believe_prelim_tree
rpart.plot(believe_prelim_tree, type = 4, clip.right.labs = FALSE, extra=102)
gc()
setwd(dir = "Google Drive/Teaching/Course Material/CSC250/CSC250-website/")
#render site.
rmarkdown::render_site()
#render site.
rmarkdown::render_site()
#render site.
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(tree)
library(dplyr)
library(rpart.plot)
library(MASS)
library(caret)
library(ztable)
library(GGally)
library(tidyr)
select <- dplyr::select
trust_2023_raw_data <- read_csv("trust_2023_raw_data.csv") %>%
mutate(response = factor(response, order = TRUE,
levels = c("Strongly Disagree", "Disagree", "Nor", "Agree", "Strongly Agree")),
likertscale = factor(likertscale, ordered = TRUE),
category = factor(category, levels = c("I", "N", "G", "S"),
labels = c("Infographic", "News", "Government", "Scientific")))
trust_2023_raw_data %>%
select(category, source, image_new) %>%
unique() %>%
group_by(category, source) %>%
summarise(n = n())
category_data <- trust_2023_raw_data %>%
select(c(image_new, category, vistype, starts_with("attr"))) %>%
unique()
category_prelim_tree <- rpart(category ~.-image_new , data = category_data, method="class", minsplit = 8)
rpart.plot(category_prelim_tree, type = 4, clip.right.labs = FALSE, extra=2)
trust_2023_raw_data %>%
select(category, source, image_new) %>%
unique() %>%
group_by(category, source) %>%
summarise(n = n()) %>%
table()
trust_2023_raw_data %>%
select(category, source, image_new) %>%
unique() %>%
group_by(category, source) %>%
summarise(n = n())
library(tidyverse)
library(ggplot2)
library(tree)
library(dplyr)
library(rpart.plot)
library(MASS)
library(caret)
library(ztable)
library(GGally)
library(tidyr)
library(kableExtra)
install.packages("kableExtra")
library(tidyverse)
library(ggplot2)
library(tree)
library(dplyr)
library(rpart.plot)
library(MASS)
library(caret)
library(ztable)
library(GGally)
library(tidyr)
library(kableExtra)
select <- dplyr::select
library(tidyverse)
library(ggplot2)
library(tree)
library(dplyr)
library(rpart.plot)
library(MASS)
library(caret)
library(ztable)
library(GGally)
library(tidyr)
library(kableExtra)
select <- dplyr::select
trust_2023_raw_data %>%
select(category, source, image_new) %>%
unique() %>%
group_by(category, source) %>%
summarise(n = n()) %>%
kbl() %>%
kable_styling()
category_data <- trust_2023_raw_data %>%
select(c(image_new, category, vistype, starts_with("attr"))) %>%
unique()
category_prelim_tree <- rpart(category ~.-image_new,
data = category_data,
method = "class",
minsplit = 8)
category_prelim_tree <- rpart(category ~.-image_new,
data = category_data,
method = "class",
minsplit = 8)
rpart.plot(category_prelim_tree, type = 4, clip.right.labs = FALSE, extra=2)
#use 80% of dataset as training set and 20% as test set
train <- category_data %>% dplyr::sample_frac(0.70)
test  <- dplyr::anti_join(category_data, train, by = 'image_new')
train <- train %>% select(-image_new)
text <- test %>% select(-image_new)
lda_category <- lda(category ~. , data = train)
lda_category
predictions_LDA = data.frame(predict(lda_category, test))
preds <- cbind(test, predictions_LDA)
# Confusion Matrix
cf <- caret::confusionMatrix(data=preds$class,
reference=test$category)
print(cf)
category_features <- rpart(category ~.-image_new,
data = category_data,
method = "class",
minsplit = 8)
rpart.plot(category_features, type = 4, clip.right.labs = FALSE, extra=2)
table(predict(category_features, type = "class"), category_data$category)
table(predict(category_features, type = "class"), category_data$category) %>%
kbl()
table(predict(category_features, type = "class"), category_data$category) %>%
kbl() %>%
kable_styling()
sum(diag(category_features_confusion))/sum(category_features_confusion)
category_features_confusion <- table(predict(category_features, type = "class"), category_data$category)
category_features_confusion %>%
kbl() %>%
kable_styling()
sum(diag(category_features_confusion))/sum(category_features_confusion)
category_features_predictions <- predict(category_features, type = "class")
table(category_features_predictions, category_data$category) %>%
kbl() %>%
kable_styling()
mean(category_data$category == category_features_predictions)
category_features_predictions <- predict(category_features, type = "class")
table(category_features_predictions, category_data$category)
kable_styling()
category_features_predictions <- predict(category_features, type = "class")
table(category_features_predictions, category_data$category)
category_features_predictions <- predict(category_features, type = "class")
table(category_features_predictions, category_data$category) %>%
kbl() %>%
kable_styling()
View(category_data)
category_features_predictions
category_features_predictions <- predict(category_features, type = "class")
category_features_confusion <- table(category_features_predictions, category_data$category)
category_features_confusion %>%
kbl() %>%
kable_styling()
View(category_features)
category_features_confusion
category_features_predictions <- predict(category_features, type = "class")
category_features_confusion <- confusionMatrix(category_features_predictions, category_data$category)
category_features_confusion %>%
kbl() %>%
kable_styling()
category_features_predictions <- predict(category_features, type = "class")
confusionMatrix(category_features_predictions, category_data$category)
