foo %>%
group_by(GM) %>%
chisq.test(partido, genero)
set.seed(1)
data.frame(partido=sample(c("PRI", "PAN"), 100, 0.6),
genero=sample(c("H", "M"), 100, 0.7),
GM=sample(c("Bajo", "Muy bajo"), 100, 0.8)) -> foo
foo %>%
group_by(GM) %>%
summarise(pvalue= chisq.test(partido, genero)$p.value)
library(dplyr)
library(tidyr)
chisq <- output_withredo %>%
filter(condition == "vanilla") %>%
group_by(goodFirst, delay_case) %>%
tally() %>%
spread(delay_case, n) %>%
#select("0", "14000") %>%
chisq.test("0", "1400", simulate.p.value = TRUE)
chisq
library(dplyr)
library(tidyr)
chisq <- output_withredo %>%
filter(condition == "vanilla") %>%
group_by(goodFirst, delay_case) %>%
tally() %>%
spread(delay_case, n) %>%
select("0", "14000") %>%
chisq.test(simulate.p.value = TRUE)
chisq
set.seed(1)
data.frame(partido=sample(c("PRI", "PAN"), 100, 0.6),
genero=sample(c("H", "M"), 100, 0.7),
GM=sample(c("Bajo", "Muy bajo"), 100, 0.8)) -> foo
foo
foo %>%
group_by(GM) %>%
summarise(pvalue= chisq.test(partido, genero)$p.value)
library(dplyr)
library(tidyr)
chisq <- output_withredo %>%
filter(condition == "vanilla") %>%
group_by(goodFirst, delay_case) %>%
tally() %>%
spread(delay_case, n) %>%
#select("0", "14000") %>%
chisq.test(simulate.p.value = TRUE)
library(corrplot)
install.packages("corrplot")
library(dplyr)
library(tidyr)
chisq <- output_withredo %>%
filter(condition == "vanilla") %>%
group_by(goodFirst, delay_case) %>%
tally() %>%
spread(delay_case, n) %>%
#select("0", "14000") %>%
chisq.test(simulate.p.value = TRUE)
library(corrplot)
corrplot(chisq$residuals, is.cor = FALSE)
library(readr)
output_withredo <- read_csv("~/Google Drive/Research/Ongoing Projects/Latency/output_withredo.csv")
library(dplyr)
library(tidyr)
chisq <- output_withredo %>%
filter(condition == "vanilla") %>%
group_by(goodFirst, delay_case) %>%
tally() %>%
spread(delay_case, n) %>%
#select("0", "14000") %>%
chisq.test(simulate.p.value = TRUE)
library(dplyr)
library(tidyr)
output_withredo %>%
filter(condition == "vanilla") %>%
group_by(goodFirst, delay_case) %>%
tally() %>%
spread(delay_case, n) #%>%
#select("0", "14000") %>%
#chisq.test(simulate.p.value = TRUE)
#library(corrplot)
#corrplot(chisq$residuals, is.cor = FALSE)
library(readr)
output_withredo <- read_csv("~/Google Drive/Research/Ongoing Projects/Latency/output_withredo.csv", row.names = 1)
library(dplyr)
library(tidyr)
library(magrittr)
output_withredo %>%
filter(condition == "vanilla") %>%
group_by(goodFirst, delay_case) %>%
tally() %>%
spread(delay_case, n) %>%
set_rownames(goodFirst)
library(dplyr)
library(tidyr)
library(magrittr)
output_withredo %>%
filter(condition == "vanilla") %>%
group_by(goodFirst, delay_case) %>%
tally() %>%
spread(delay_case, n) #%>%
#set_rownames(goodFirst)
#select("0", "14000") %>%
#chisq.test(simulate.p.value = TRUE)
#library(corrplot)
#corrplot(chisq$residuals, is.cor = FALSE)
?set_rownames
library(dplyr)
library(tidyr)
library(magrittr)
output_withredo %>%
filter(condition == "vanilla") %>%
group_by(goodFirst, delay_case) %>%
tally() %>%
spread(delay_case, n) %>%
set_rownames(goodFirst)
library(readr)
output_withredo <- read_csv("~/Google Drive/Research/Ongoing Projects/Latency/output_withredo.csv")
library(dplyr)
library(tidyr)
library(magrittr)
output_withredo %>%
filter(condition == "vanilla") %>%
group_by(goodFirst, delay_case) %>%
tally() %>%
spread(delay_case, n) %>%
set_rownames(goodFirst)
mtcars <-
mtcars %>%
set_rownames(as.character(1:nrow(mtcars)))
View(mtcars)
View(mtcars)
library(dplyr)
library(tidyr)
output_withredo %>%
filter(condition == "vanilla") %>%
group_by(goodFirst, delay_case) %>%
tally() %>%
spread(delay_case, n)
#select("0", "14000") %>%
#chisq.test(simulate.p.value = TRUE)
#library(corrplot)
#corrplot(chisq$residuals, is.cor = FALSE)
?chisq.test
M <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))
dimnames(M) <- list(gender = c("F", "M"),
party = c("Democrat","Independent", "Republican"))
(Xsq <- chisq.test(M))  # Prints test summary
Xsq$observed   # observed counts (same as M)
Xsq$expected   # expected counts under the null
Xsq$residuals  # Pearson residuals
Xsq$stdres     # standardized residuals
## Effect of simulating p-values
x <- matrix(c(12, 5, 7, 7), ncol = 2)
chisq.test(x)$p.value           # 0.4233
chisq.test(x, simulate.p.value = TRUE, B = 10000)$p.value
# around 0.29!
M <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))
dimnames(M) <- list(gender = c("F", "M"),
party = c("Democrat","Independent", "Republican"))
M <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))
dimnames(M) <- list(gender = c("F", "M"),
party = c("Democrat","Independent", "Republican"))
(Xsq <- chisq.test(M))  # Prints test summary
library(dplyr)
library(tidyr)
chisq_results <- output_withredo %>%
filter(condition == "vanilla") %>%
group_by(goodFirst, delay_case) %>%
tally() %>%
spread(delay_case, n) %>%
select("0", "14000") %>%
chisq.test(simulate.p.value = TRUE)
library(dplyr)
library(tidyr)
table <- output_withredo %>%
filter(condition == "vanilla") %>%
group_by(goodFirst, delay_case) %>%
tally() %>%
spread(delay_case, n)
chisq_results <- table %>%
select("0", "14000") %>%
chisq.test(simulate.p.value = TRUE)
table
table %>%
select("0", "14000")
View(mtcars)
library(readr)
output_withredo <- read_csv("~/Google Drive/Research/Ongoing Projects/Latency/output_withredo.csv")
library(readr)
output_withredo <- read_csv("~/Google Drive/Research/Ongoing Projects/Latency/output_withredo.csv")
table(output_withredo$goodFirst, output_withredo$delay_case)
library(dplyr)
library(tidyr)
vanilla_table <- output_withredo %>%
filter(condition == "vanilla") %>%
table(goodFirst, delay_case)
library(dplyr)
library(tidyr)
vanilla_table <- output_withredo %>%
filter(condition == "vanilla") %>%
table(.$goodFirst, .$delay_case)
library(dplyr)
library(tidyr)
vanilla_table <- output_withredo %>%
filter(condition == "vanilla")
vanilla_table <- table(vanilla_table$goodFirst, vanilla_table$delay_case)
library(dplyr)
library(tidyr)
vanilla_table <- output_withredo %>%
filter(condition == "vanilla")
vanilla_table <- table(vanilla_table$goodFirst, vanilla_table$delay_case)
vanilla_table
library(dplyr)
library(tidyr)
vanilla <- output_withredo %>%
filter(condition == "vanilla")
vanilla_table <- table(vanilla$goodFirst, vanilla$delay_case)
vanilla_table
chisq.test(vanilla$goodFirst, vanilla$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
vanilla <- output_withredo %>%
filter(condition == "breadcrumbs")
vanilla_table <- table(vanilla$goodFirst, vanilla$delay_case)
vanilla_table
chisq.test(vanilla$goodFirst, vanilla$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
breadcrumbs <- output_withredo %>%
filter(condition == "breadcrumbs")
breadcrumbs_table <- table(breadcrumbs$goodFirst, breadcrumbs$delay_case)
breadcrumbs_table
chisq.test(breadcrumbs$goodFirst, breadcrumbs$delay_case, correct=FALSE)
View(output_withredo)
View(output_withredo)
library(dplyr)
library(tidyr)
incomplete <- output_withredo %>%
filter(condition == "incomplete")
incomplete_table <- table(incomplete$goodFirst, incomplete$delay_case)
incomplete_table
chisq.test(incomplete$goodFirst, incomplete$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
inthint <- output_withredo %>%
filter(condition == "inthint")
inthint_table <- table(inthint$goodFirst, inthint$delay_case)
inthint_table
chisq.test(inthint$goodFirst, inthint$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
incomplete <- output_withredo %>%
filter(condition == "incomplete")
incomplete_table <- table(incomplete$goodFirst, incomplete$delay_case)
incomplete_table
chisq.test(incomplete$goodFirst, incomplete$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
inthint <- output_withredo %>%
filter(condition == "inthint")
inthint_table <- table(inthint$goodFirst, inthint$delay_case)
inthint_table
chisq.test(inthint$goodFirst, inthint$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
large <- output_withredo %>%
filter(condition == "inthint")
large_table <- table(large$goodFirst, large$delay_case)
large_table
chisq.test(large$goodFirst, large$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
perfect <- output_withredo %>%
filter(condition == "perfect")
perfect_table <- table(perfect$goodFirst, perfect$delay_case)
perfect_table
chisq.test(perfect$goodFirst, perfect$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
perfect <- output_withredo %>%
filter(condition == "perfect")
perfect_table <- table(perfect$goodFirst, perfect$delay_case)
perfect_table
chisq.test(perfect$goodFirst, perfect$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
timer <- output_withredo %>%
filter(condition == "timer")
timer_table <- table(timer$goodFirst, timer$delay_case)
timer_table
chisq.test(timer$goodFirst, timer$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
timer <- output_withredo %>%
filter(condition == "timer")
timer_table <- table(timer$goodFirst, timer$delay_case)
timer_table
chisq.test(timer$goodFirst, timer$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
uncertain <- output_withredo %>%
filter(condition == "uncertain")
uncertain_table <- table(uncertain$goodFirst, uncertain$delay_case)
uncertain_table
chisq.test(uncertain$goodFirst, uncertain$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
large <- output_withredo %>%
filter(condition == "inthint")
large_table <- table(large$goodFirst, large$delay_case)
large_table
chisq.test(large$goodFirst, large$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
inthint <- output_withredo %>%
filter(condition == "inthint")
inthint_table <- table(inthint$goodFirst, inthint$delay_case)
inthint_table
chisq.test(inthint$goodFirst, inthint$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
large <- output_withredo %>%
filter(condition == "large")
large_table <- table(large$goodFirst, large$delay_case)
large_table
chisq.test(large$goodFirst, large$delay_case, correct=FALSE)
View(large)
View(large)
library(readr)
output_withredo <- read_csv("~/Google Drive/Research/Ongoing Projects/Latency/output_withredo.csv")
vanilla <- output_withredo %>%
filter(condition == "vanilla", delay_case > 0)
vanilla_table <- table(vanilla$goodFirst, vanilla$delay_case)
vanilla_table
chisq.test(vanilla$goodFirst, vanilla$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
large <- output_withredo %>%
filter(condition == "large")
large_table <- table(large$goodFirst, large$delay_case)
large_table
# chisq.test(large$goodFirst, large$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
uncertain <- output_withredo %>%
filter(condition == "uncertain")
uncertain_table <- table(uncertain$goodFirst, uncertain$delay_case)
uncertain_table
chisq.test(uncertain$goodFirst, uncertain$delay_case, correct=FALSE)
library(readr)
library(dplyr)
library(tidyr)
output_withredo <- read_csv("~/Google Drive/Research/Ongoing Projects/Latency/output_withredo.csv")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(tidyr)
output_withredo <- read_csv("~/Google Drive/Research/Ongoing Projects/Latency/output_withredo.csv")
vanilla <- output_withredo %>%
filter(condition == "vanilla")
vanilla_table <- table(vanilla$goodFirst, vanilla$delay_case)
vanilla_table
chisq.test(vanilla$goodFirst, vanilla$delay_case, correct=FALSE)
breadcrumbs <- output_withredo %>%
filter(condition == "breadcrumbs")
breadcrumbs_table <- table(breadcrumbs$goodFirst, breadcrumbs$delay_case)
breadcrumbs_table
chisq.test(breadcrumbs$goodFirst, breadcrumbs$delay_case, correct=FALSE)
incomplete <- output_withredo %>%
filter(condition == "incomplete")
incomplete_table <- table(incomplete$goodFirst, incomplete$delay_case)
incomplete_table
chisq.test(incomplete$goodFirst, incomplete$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
perfect <- output_withredo %>%
filter(condition == "perfect")
perfect_table <- table(perfect$goodFirst, perfect$delay_case)
perfect_table
chisq.test(perfect$goodFirst, perfect$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
inthint <- output_withredo %>%
filter(condition == "inthint")
inthint_table <- table(inthint$goodFirst, inthint$delay_case)
inthint_table
chisq.test(inthint$goodFirst, inthint$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
timer <- output_withredo %>%
filter(condition == "timer")
timer_table <- table(timer$goodFirst, timer$delay_case)
timer_table
chisq.test(timer$goodFirst, timer$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
uncertain <- output_withredo %>%
filter(condition == "uncertain")
uncertain_table <- table(uncertain$goodFirst, uncertain$delay_case)
uncertain_table
chisq.test(uncertain$goodFirst, uncertain$delay_case, correct=FALSE)
library(dplyr)
library(tidyr)
large <- output_withredo %>%
filter(condition == "large")
large_table <- table(large$goodFirst, large$delay_case)
large_table
# chisq.test(large$goodFirst, large$delay_case, correct=FALSE)
timer <- output_withredo %>%
filter(condition == "timer")
timer_table <- table(timer$goodFirst, timer$delay_case)
timer_table
chisq.test(timer$goodFirst, timer$delay_case, correct=FALSE, simulate.p.value = TRUE)
timer <- output_withredo %>%
filter(condition == "timer")
timer_table <- table(timer$goodFirst, timer$delay_case)
timer_table
chisq.test(timer$goodFirst, timer$delay_case, correct=FALSE)
vanilla <- output_withredo %>%
filter(condition == "vanilla")
vanilla_table <- table(vanilla$goodFirst, vanilla$delay_case)
vanilla_table
chisq <- chisq.test(vanilla$goodFirst, vanilla$delay_case, correct=FALSE)
chisq
round(chisq$residuals, 3)
vanilla <- output_withredo %>%
filter(condition == "vanilla")
vanilla_table <- table(vanilla$goodFirst, vanilla$delay_case)
vanilla_table
chisq <- chisq.test(vanilla$goodFirst, vanilla$delay_case, correct=FALSE)
chisq
# Contibution in percentage (%)
contrib <- 100*chisq$residuals^2/chisq$statistic
round(contrib, 3)
vanilla <- output_withredo %>%
filter(condition == "vanilla")
chisq <- chisq.test(vanilla$goodFirst, vanilla$delay_case, correct=FALSE)
chisq$observed
# Contibution in percentage (%)
contrib <- 100*chisq$residuals^2/chisq$statistic
round(contrib, 3)
vanilla <- output_withredo %>%
filter(condition == "vanilla")
chisq <- chisq.test(vanilla$goodFirst, vanilla$delay_case, correct=FALSE)
chisq$observed
chisq$expected
# Contibution in percentage (%)
contrib <- 100*chisq$residuals^2/chisq$statistic
round(contrib, 3)
breadcrumbs <- output_withredo %>%
filter(condition == "breadcrumbs")
chisq <- chisq.test(breadcrumbs$goodFirst, breadcrumbs$delay_case, correct=FALSE)
chisq
chisq$observed
chisq$expected
# Contibution in percentage (%)
contrib <- 100*chisq$residuals^2/chisq$statistic
round(contrib, 3)
breadcrumbs <- output_withredo %>%
filter(condition == "breadcrumbs")
chisq <- chisq.test(breadcrumbs$goodFirst,
breadcrumbs$delay_case,
correct = FALSE)
summary(chisq)
breadcrumbs <- output_withredo %>%
filter(condition == "breadcrumbs")
chisq <- chisq.test(breadcrumbs$goodFirst,
breadcrumbs$delay_case,
correct = FALSE)
print(chisq)
breadcrumbs <- output_withredo %>%
filter(condition == "breadcrumbs")
chisq <- chisq.test(breadcrumbs$goodFirst,
breadcrumbs$delay_case,
correct = FALSE)
knitr::kable(chisq)
breadcrumbs <- output_withredo %>%
filter(condition == "breadcrumbs")
chisq <- chisq.test(breadcrumbs$goodFirst,
breadcrumbs$delay_case,
correct = FALSE)
type(chisq)
breadcrumbs <- output_withredo %>%
filter(condition == "breadcrumbs")
chisq <- chisq.test(breadcrumbs$goodFirst,
breadcrumbs$delay_case,
correct = FALSE)
typeof(chisq)
install.packages("pander")
library(readr)
library(dplyr)
library(tidyr)
library(pander)
output_withredo <- read_csv("~/Google Drive/Research/Ongoing Projects/Latency/output_withredo.csv")
breadcrumbs <- output_withredo %>%
filter(condition == "breadcrumbs")
chisq <- chisq.test(breadcrumbs$goodFirst,
breadcrumbs$delay_case,
correct = FALSE)
pander(chisq)
chisq <- output_withredo %>%
filter(condition == "breadcrumbs") %>%
select(goodFirst, delay_case) %>%
chisq.test(correct = FALSE)
breadcrumbs <- output_withredo %>%
filter(condition == "breadcrumbs") %>%
select(goodFirst, delay_case)
chisq <- chisq.test(breadcrumbs$goodFirst,
breadcrumbs$delay_case,
correct = FALSE)
pander(chisq)
